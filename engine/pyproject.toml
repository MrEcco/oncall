[tool.isort]
profile = "black"
line_length=120
float_to_top=true
py_version=311
extend_skip_glob = "**/migrations/**"

[tool.black]
line-length = 120
target-version = ["py311"]
force-exclude = "migrations"

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/type_stubs"
implicit_reexport = true
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]
exclude = [
    # TOML's double-quoted strings require escaping backslashes
    "tests/test_.*\\.py$",    # test files
    "migrations/\\d*.*\\.py",  # migration files
]
disable_error_code = [
    "abstract",
    "annotation-unchecked",
    "arg-type",
    "assignment",
    "attr-defined",
    "call-arg",
    "call-overload",
    "has-type",
    "index",
    "misc",
    "name-defined",
    "operator",
    "return-value",
    "typeddict-item",
    "union-attr",
]

###################################
#
# The following set of rules are in place to gradually move us towards "strict" mode.
# From the mypy docs (https://mypy.readthedocs.io/en/stable/existing_code.html#introduce-stricter-options):
#
# An excellent goal to aim for is to have your codebase pass when run against mypy --strict. This basically ensures
# that you will never have a type related error without an explicit circumvention somewhere (such as a # type: ignore
# comment).
#
###################################
# The following config is equivalent to --strict (as of mypy 1.0):
strict = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
strict_equality = true
strict_concatenate = true
check_untyped_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
no_implicit_reexport = true
warn_return_any = true

# the following rules are currently disabled as they're generating > 1500 errors
# the best approach here is to probably enable them django app by app, to make the work more managable
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_calls = false
disallow_any_generics = false
###################################

# mypy per-module options
[[tool.mypy.overrides]]
module = [
    # the following setting should eventually be removed, one module at a time.
    # It's only being added to temporarily surpress the:
    # "module is installed, but missing library stubs or py.typed marker" errors
    # we can slowly either start to add library stubs ourselves, or try and upgrade these libraries to see if
    # a newer version includes type stubs
    "anymail.*",
    "celery.utils.debug",
    "debug_toolbar.*",
    "django_deprecate_fields.*",
    "django_migration_linter",
    "django_sns_view.*",
    "factory.*",
    "fcm_django.*",
    "firebase_admin.*",
    "humanize.*",
    "ipware.*",
    "markdown2.*",
    "mirage.*",
    "ordered_model.*",
    "phonenumbers.*",
    "polymorphic.*",
    "pyroscope.*",
    "ratelimit.*",
    "recurring_ical_events.*",
    "rest_polymorphic.*",
    "slackclient.*",
    "slackviewer.*",
    "social_core.*",
    "social_django.*",
    "twilio.*",
    "uwsgidecorators.*",
    "whitenoise.*",
    "uwsgi.*",
]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "settings.dev"
